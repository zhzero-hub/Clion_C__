Data acquisition is the sampling of the real world to generate data that can be manipulated by a computer.Sometimes abbreviated DAQ or DAS,data acquisition typically involves acquisition of signals and waveforms and processing the signals to obtain desired information.The components of data acquisition systems include appropriate sensors that convert any measurement parameter to an electrical signal,then conditioning the electrical signal which can then be acquired by data acquisition hardware.
Acquired data are displayed,analyzed,and stored on a computer,either using vendor supplied software,or custom displays and control can be developed using various general purpose programming languages such as BASIC,C,Fortran,Java,Lisp,Pascal.Specialized programming languages used for data acquisition include EPICS,used to build large scale data acquisition systems,LabVIEW,which offers a graphical programming environment optimized for data acquisition,and MATLAB which provides a programming language,and also built-in graphical tools and libraries for data acquisition and analysis.
How data is acquired 
Source 
Data acquisition begins with the physical phenomenon or physical property of an object (under investigation) to be measured.This physical property or phenomenon could be the temperature or temperature change of a room,the intensity or intensity change of a light source,the pressure inside a chamber,the force applied to an object,or many other things.An effective data acquisition system can measure all of these different properties or phenomena.
A transducer is a device that converts a physical property or phenomenon into a corresponding measurable electrical signal,such as voltage,current,change in resistance or capacitor values,etc.The ability of a data acquisition system to measure different phenomena depends on the transducers to convert the physical phenomena into signals measurable by the data acquisition hardware.Transducers are synonymous with sensors in DAQ systems.There are specific transducers for many different applications,such as measuring temperature,pressure,or fluid flow.DAQ also deploy various signal conditioning techniques to adequately modify various different electrical signals into voltage that can then be digitized using ADCs.
Signals 
Signals may be digital (also called logic signals sometimes) or analog depending on the transducer used.
Signal conditioning may be necessary if the signal from the transducer is not suitable for the DAQ hardware to be used.The signal may be amplified or deamplified,or may require filtering,or a lock-in amplifier is included to perform demodulation.Various other examples of signal conditioning might be bridge completion,providing current or voltage excitation to the sensor,isolation,linearization,etc.
Analog signals tolerate almost no cross talk and so are converted to digital data,before coming close to a PC or before traveling along long cables.For analog data to have a high signal to noise ratio,the signal needs to be very high,and sending +-10 Volts along a fast signal path with a 50 Ohm termination requires powerful drivers.With a slightly mismatched or no termination at all,the voltage along the cable rings multiple time until it is settled in the needed precision.Digital data can have +-0.5 Volt.The same is true for DACs.Also digital data can be sent over glass fiber for high voltage isolation or by means of Manchester encoding or similar through RF-couplers,which prevent net hum.Also as of 2007 16bit ADCs cost only 20 $ or 
DAQ hardware 
DAQ hardware is what usually interfaces between the signal and a PC.It could be in the form of modules that can be connected to the computer's ports (parallel,serial,USB,etc...) or cards connected to slots (PCI,ISA,PCI-E,etc...) in the mother board.Usually the space on the back of a PCI card is too small for all the connections needed,so an external breakout box is required.The cable between this Box and the PC is expensive due to the many wires and the required shielding and because it is exotic.
DAQ-cards often contain multiple components (multiplexer,ADC,DAC,TTL-IO,high speed timers,RAM).These are accessible via a bus by a micro controller,which can run small programs.The controller is more flexible than a hard wired logic,yet cheaper than a CPU so that it is alright to block it with simple polling loops.For example:Waiting for a trigger,starting the ADC,looking up the time,waiting for the ADC to finish,move value to RAM,switch multiplexer,get TTL input,let DAC proceed with voltage ramp.As 16 bit ADCs,DACs,OpAmps and sample and holds with equal precision as of 2007 only run at 1 MHz,even low cost digital controllers like the AVR32 have about 100 clock cycles for bookkeeping in between.
Reconfigurable computing may deliver high speed for digital signals.Digital signal processors spend a lot of silicon on arithmetic and allow tight control loops or filters.The fixed connection with the PC allows for comfortable compilation and debugging.Using an external housing a modular design with slots in a bus can grow with the needs of the user.High speed binary data needs special purpose hardware called Time to digital converter and high speed 8 bit ADCs are called oscilloscope#Digital storage oscilloscope,which are typically not connected to DAQ hardware,but directly to the PC.
Also notable is that not all DAQ hardware has to run permanently connected to a PC,for example intelligent stand-alone loggers and controllers,which can be operated from a PC,yet they can operate completely independent of the PC.
DAQ software 
DAQ software is needed in order to the DAQ Hardware to work with a PC.This can come in at least three flavors:applications that register directly from the hardware,low-level software driver (usually packaged with the DAQ hardware) to allow developing higher level applications to register data coming from the hardware and off-the-shelf applications 
Driver software that usually comes with the DAQ hardware or from other vendors,allows the operating system to recognize the DAQ hardware and programs to access the signals being read by the DAQ hardware.A good driver offers high and low level access.So one would start out with the high level solutions offered and improves down to assembly instructions in time critical or exotic applications.
Off-the-shelf applications include interface for programming means to log,analyze and display the acquired data.Examples of this kind of software are MATLAB and LabVIEW,both providing a high level graphical programming language.